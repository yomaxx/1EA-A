#include <stdio.h>
#include <stdlib.h>
#pragma pack(1)                                 //Geeft compiler commando om bepaalde padding te gerbuiken

#define input "C:\\Users\\Maxva\\Desktop\\input.bmp"
#define output "C:\\Users\\Maxva\\Desktop\\output.bmp"

typedef struct
{
    unsigned short int type;
    unsigned int size;                          // Grootte van de file
    unsigned short int reserved1, reserved2;
    unsigned int offset;
}Header;

typedef struct
{
    unsigned int size;                          //Groote van de info header in bytes
    long width,height;                          //Hoogte en breedte van de bitmap
    unsigned short int planes;                  //aantal kleuren planes
    unsigned short int bits;                    //aantsal bits per pixel
    unsigned int compression;                   //soort compressie
    unsigned int imagesize;                     //grootte foto in bytes
    int xresolution,yresolution;                //aantal pixels in x/y-as
    unsigned int ncolours;                      //aantal kleuren
    unsigned int importantcolours;              //belangrijke kleuren
}InfoHeader;

typedef struct
{
    int Red;
    int Green;
    int Blue;
}RGB;

/*typedef struct
{
    unsigned char Blue;
    unsigned char Green;
    unsigned char Red;
}RGB; */


int main()
{
    FILE *InputFile = NULL;
    InputFile = fopen(input, "rb");           // open de BMP file in readable binary mode
    if(InputFile == NULL)
        {
        printf("ERROR 404: File not found\n\n");
        exit(EXIT_FAILURE);
        }

    FILE *OutputFile = NULL;
    OutputFile = fopen(output, "wb");         //open/maak de file waar de geinverteerde BMP opgeslagen wordt in writable binary mode.
    if(OutputFile == NULL)
        {
        printf("Kan bestand niet aanmaken\n\n");
        exit(EXIT_FAILURE);
        }

    Header FileHead;
    InfoHeader infoHead;

    fread(&FileHead, sizeof(Header), 1, InputFile);         //Leest Header info van input.bmp
    fread(&infoHead, sizeof(InfoHeader), 1, InputFile);     //Leest InfoHeader info van input.bmp

    fwrite(&FileHead, sizeof(Header), 1, OutputFile);       //Schrijft Header info naar output.bmp
    fwrite(&infoHead, sizeof(InfoHeader), 1, OutputFile);   //schrijft InfoHeader info naar output.bmp

    //int padding = (4 - (infoHead.width * sizeof(RGB)) % 4) % 4;   //Niet nodig volgens mij

        int i, j, k, height;

        for(i = 0, height = abs(infoHead.height); i < height; i++)  //Gaat elke pixel in de Y-as af.
        {
            for(j = 0; j < infoHead.width; j++)                     //Gaat alke pixel in de X-as af voor elke pixel in de hoogte.
            {
            RGB triple;

            fread(&triple, sizeof(RGB), 1, InputFile);

            printf("%d\n", triple.Red);
            printf("%d\n", triple.Green);
            printf("%d\n\n", triple.Blue);
            /*triple.Red = 255 - triple.Red;
            triple.Green = 255 - triple.Green;
            triple.Blue = 255 - triple.Blue;
            */

            fwrite(&triple, sizeof(RGB), 1, OutputFile);
            }
        }

        /*fseek(InputFile, padding, SEEK_CUR);  //Niet nodig volgens mij

        for(k = 0; k < padding; k++)            //NIet nodig volgens mij
        {
            fputc(0x00, OutputFile);
        }*/


    fclose(InputFile);      //De geopende files weer sluiten
    fclose(OutputFile);
    return 0;
}

/////////////////////////////////////////////////////////////////////////
//      bronvermelding:
//
//      https://stackoverflow.com/questions/3318410/pragma-pack-effect  - Voor padding en juist compileren.
//      http://paulbourke.net/dataformats/bmp/                          - Voor struct header en info header
//
//
//
//
//
//
